/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.irit.display;


import java.io.*;
import java.util.*;
import java.util.Timer;
import javax.swing.*;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerException;



import com.irit.upnp.*;
import com.irit.xml.CommandeXml;
import com.irit.xml.GenerateurXml;
import com.irit.xml.QuestionXml;
import org.fourthline.cling.model.meta.LocalService;
import org.fourthline.cling.model.types.UDN;

/**
 *
 * @author mkostiuk
 */
public class Fenetre extends javax.swing.JFrame {
    
    private enum State {
        INIT, SOUMISE;
    }
    
    private LocalService<MasterCommandService> masterCommandService;
    private State state;

    private UDN udn;
    private GenerateurXml gen;


    public void activate(JButton ... buttons) {
        for (JButton b : buttons)
            b.setEnabled(true);
    }
    
    public void deactivate(JButton ... buttons) {
        for (JButton b : buttons)
            b.setEnabled(false);
    }
    
    public void init(LocalService<MasterCommandService> cpc, UDN u) {

        masterCommandService = cpc;
        state = State.INIT;
        activate(soumettreButton);
        deactivate(terminerbutton);
        udn = u;


    }
    /**
     * Creates new form Fenetre
     */
    public Fenetre(LocalService<MasterCommandService> cpc, UDN u) {
        initComponents();
        init(cpc, u);
    }

  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        soumettreButton = new javax.swing.JButton();
        terminerbutton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextPane1.setText("Question test:\n\nCombien font  1+1???\n\n1) 4000\n2) 2\n3) 11");
        jScrollPane1.setViewportView(jTextPane1);

        soumettreButton.setText("Soumettre");
        soumettreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    soumettreButtonActionPerformed(evt);
                } catch (TransformerException e) {
                    e.printStackTrace();
                } catch (ParserConfigurationException e) {
                    e.printStackTrace();
                }
            }
        });

        terminerbutton.setText("Terminer");
        terminerbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    terminerbuttonActionPerformed(evt);
                } catch (ParserConfigurationException e) {
                    e.printStackTrace();
                } catch (TransformerException e) {
                    e.printStackTrace();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(soumettreButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(terminerbutton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(soumettreButton)
                    .addComponent(terminerbutton))
                .addContainerGap(110, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void soumettreButtonActionPerformed(java.awt.event.ActionEvent evt) throws TransformerException, ParserConfigurationException {//GEN-FIRST:event_soumettreButtonActionPerformed
        switch(state) {
            case INIT:
                activate(terminerbutton);
                deactivate(soumettreButton);

                String nb = JOptionPane.showInputDialog("Entrer le nombre de reponses possible:");

                envoyerQuestion(nb);
                envoyerCommande("CENTRE");
                sendAucunTime();//On doit envoyer AUCUN pour que la prochaine CENTRE soit prise en compte

                state = State.SOUMISE;
                break;
            case SOUMISE:
                //Interdit
                break;
        }
    }//GEN-LAST:event_soumettreButtonActionPerformed

    private void terminerbuttonActionPerformed(java.awt.event.ActionEvent evt)
            throws ParserConfigurationException,
            IOException,
            TransformerException {
        //GEN-FIRST:event_terminerbuttonActionPerformed

        switch(state) {
            case INIT:
                //Interdit
                break;
            case SOUMISE:
                activate(soumettreButton);
                deactivate(terminerbutton);

                envoyerCommande("CENTRE");
                sendAucunTime();//On doit envoyer AUCUN pour que la prochaine CENTRE soit prise en compte

                state = State.INIT;

                break;
        }
    }//GEN-LAST:event_terminerbuttonActionPerformed

    public void envoyerQuestion(String nb) throws TransformerException, ParserConfigurationException {
        gen = new QuestionXml();

        HashMap<String, String> args = new HashMap<String, String>();
        args.put("UDN", udn.toString());
        args.put("KEY", "1234");
        args.put("QUESTION", jTextPane1.getText());
        args.put("NBQUESTION", nb);

        masterCommandService.getManager().getImplementation()
                .sendQuestion(gen.getDocXml(args));
        masterCommandService.getManager().getImplementation()
                .sendQuestion("");
    }

    public void envoyerCommande (String commande) throws TransformerException, ParserConfigurationException {
        gen = new CommandeXml();

        HashMap<String, String> args = new HashMap<String, String>();
        args.put("UDN", udn.toString());
        args.put("KEY", "1234");
        args.put("COMMANDE", commande);

        masterCommandService.getManager().getImplementation()
                .sendCommande(gen.getDocXml(args));
    }

    public void sendAucunTime() {
        java.util.Timer t = new Timer();
        t.schedule(new TimerTask() {
            @Override
            public void run() {
                try {
                    envoyerCommande("AUCUN");
                } catch (TransformerException e) {
                    e.printStackTrace();
                } catch (ParserConfigurationException e) {
                    e.printStackTrace();
                }
            }
        },1000);
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JButton soumettreButton;
    private javax.swing.JButton terminerbutton;
    // End of variables declaration//GEN-END:variables
}
